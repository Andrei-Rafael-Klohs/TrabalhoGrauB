/*
Trabalho do Grau B - Trabalho Prático: Sistema de Gerenciamento de Poções de Alquimia
Aluno: Andrei Rafael Padilha Klohs
Curso: Ciências Biológicas (Bacharelado)
Disciplina: Algoritmos e Programação: Fundamentos
Objetivo: Desenvolver um sistema de produção de poções
*/

#include <stdio.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>

// Struct para ingredientes, conforme repassado pela sora Rossana
typedef struct 
{
    char nome[30];  // Nome do ingrediente
    int quantidade; // Quantidade atual do ingrediente em estoque
} Ingrediente;

// Struck para poçoes, idem
typedef struct 
{
    char nome[30];             // Nome da poção
    int ingredientes[7];       // Índices dos ingredientes necessários
    int quantidades[7];        // Quantidades necessárias de cada ingrediente
} Pocao;

// Array para definir os estoques inicias e quais são os igedientes, levando em consideração a struct dada no enunciado do trabalho
Ingrediente estoque[7] = 
{
    {"Pó de Fênix", 100},
    {"Essência Celestial", 50},
    {"Raiz de Dragão", 45},
    {"Orvalho Lunar", 30},
    {"Flores secas", 200},
    {"Elixir amargo", 20},
    {"Lágrimas de unicórnio", 15}
};

//Mesmo lance do comentário anterior, mas, para as poções.
// Coloquei cada ingrediente ao lado da poção para organizar melhor a leitura do código
//Coloca primeiro o índice do ingrediente, e depois a quantia necessária para a Poção
// Importante, o índice SEMPRE começa em zero para array

Pocao poções[5] = 
{
    {"Poção de Cura", {0, 1, 4, 6}, {30, 20, 20, 10}},  // Pó de Fênix, Essência Celestial, Flores secas, Lágrimas de unicórnio
    {"Poção Força da Floresta", {3, 2, 4}, {20, 30, 30}}, // Orvalho Lunar, Raiz de Dragão, Flores secas
    {"Poção Sabedoria da Riqueza", {1, 0}, {30, 50}}, // Essência Celestial, Pó de Fênix
    {"Poção Sorte no Amor", {3, 4, 6}, {10, 50, 5}}, // Orvalho Lunar, Flores secas, Lágrimas de unicórnio
    {"Poção Malvada", {5, 2}, {10, 15}} // Elixir amargo, Raiz de Dragão
};


// Função para consultar os ingredientes disponíveis
void consultar_ingredientes() 
{
    printf("\n"); //Só patra deixar o código mais bonitinho
    printf("Ingredientes disponíveis:\n");
    
    for (int i = 0; i < 7; i++) 
    {
        printf("%d. %s: %d %s\n", i + 1, estoque[i].nome, estoque[i].quantidade, 
                (i == 1 || i == 3 || i == 6) ? "ml" : "g"); //Isso é só pra ver a unidade de medida que vai ir no final, verificar se está funcionando mesmo
                //É uma lógica de, se for igual ao array 1, 3 e 6, é liquido, logo ml
                //Se não, é sólido, então g. Outros trechos do código vão seguir a mesma linha    
    }
}

// Função para preparar a poção
void preparar_pocao(int pocao_index) 
{
    int ingredientes_em_falta = 0;

    // Verificar se os ingredientes necessários estão disponíveis
    for (int i = 0; i < 7 && poções[pocao_index].ingredientes[i] != -1; i++) 
    {
        int idx_ingrediente = poções[pocao_index].ingredientes[i];
        if (estoque[idx_ingrediente].quantidade < poções[pocao_index].quantidades[i]) 
        {
            ingredientes_em_falta = 1; //Sendo diferente de zero, tá em falta
            printf("Não foi possível preparar a poção. Os seguintes ingredientes estão em falta:\n");
            printf("%d. %s: é necessário %d %s, está disponível %d %s\n", 
                i + 1, 
                estoque[idx_ingrediente].nome, 
                poções[pocao_index].quantidades[i], 
                (idx_ingrediente == 1 || idx_ingrediente == 3 || idx_ingrediente == 6) ? "ml" : "g", 
                estoque[idx_ingrediente].quantidade, 
                (idx_ingrediente == 1 || idx_ingrediente == 3 || idx_ingrediente == 6) ? "ml" : "g");
        }
    }

    // Se todos os ingredientes estiverem disponíveis
    if (ingredientes_em_falta == 0) //Sendo igual a zero, pode preparar a função
    {
        for (int i = 0; i < 7 && poções[pocao_index].ingredientes[i] != -1; i++) 
        {
            int idx_ingrediente = poções[pocao_index].ingredientes[i];
            estoque[idx_ingrediente].quantidade -= poções[pocao_index].quantidades[i];
        }
        
        printf("\n");
        printf("Sua poção foi criada com sucesso!\n");
        printf("Seu estoque foi atualizado:\n");
        consultar_ingredientes();
    }
}

// Função para reabastecer um ingrediente
void reabastecer_ingrediente() 
{
    int ingrediente_index;
    int quantidade;

    consultar_ingredientes();
    
    printf("Digite o número do ingrediente que deseja abastecer:\n ");
    while (scanf("%d", &ingrediente_index) != 1 || ingrediente_index < 1 || ingrediente_index > 7) 
    {
        printf("Digite um número entre 1 e 7.\n");
        while (getchar() != '\n'); // Limpar o buffer de entrada
    }

    printf("Digite a quantidade a ser colocada: ");
    while (scanf("%d", &quantidade) != 1 || quantidade <= 0) //Como não tem subtração de inventário, não faz sentido permitir números negativos
    {
        printf("Digite um número positivo.\n");
        while (getchar() != '\n'); // Limpar o buffer de entrada
    }

    estoque[ingrediente_index - 1].quantidade += quantidade;
    printf("\n");
    printf("Você reabasteceu o seu ingrediente!\n");
    consultar_ingredientes();
}

// Função para exibir o menu e realizar as operações
void exibir_menu() 
{
    int opcao = 0;
    int pocao_index;

    while (opcao != 4) {
        printf("Menu:\n");
        printf("1. Consultar Ingredientes Disponíveis\n");
        printf("2. Preparar Pocao\n");
        printf("3. Reabastecer Ingrediente\n");
        printf("4. Sair\n");
        printf("Escolha uma opção de 1 a 4: ");
        
        while (scanf("%d", &opcao) != 1 || opcao < 1 || opcao > 4)
        
        {
            printf("Por favor, escolha uma opção entre 1 à 4.\n");
            while (getchar() != '\n'); // Limpar o buffer de entrada
        }

        //Agora faz a sequência de ifs que vai puxando as funções conforme o jogador escolhe
        if (opcao == 1)
        {
            consultar_ingredientes();
        } 
        
        else if (opcao == 2) 
        {
            printf("\nEscolha a poção que quer fazer:\n");
            
            for (int i = 0; i < 5; i++)
            {
                printf("%d. %s\n", i + 1, poções[i].nome); //Chama struct
            }
            
            printf("Digite o número da poção: ");
            
            while (scanf("%d", &pocao_index) != 1 || pocao_index < 1 || pocao_index > 5)
            {
                printf("Dígito inválido, escolha uma poção válida (entre 1 e 5).\n");
            }
            
            preparar_pocao(pocao_index - 1);
            
        } 
        
        else if (opcao == 3) 
        {
            reabastecer_ingrediente();
        } 
        
        else if (opcao == 4) {
            printf("Certo, fechando programa, até mais tarde!\n");
        }
    }
}

int main() 

{
    // Exibir o menu para o usuário
    exibir_menu();
    return 0;
}
